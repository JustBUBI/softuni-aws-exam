// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Stack Created 1`] = `
{
  "Outputs": {
    "ProductApiEndpoint760E02C8": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ProductApi63AD160A",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "ProductApiDeploymentStageprod9B123BA2",
            },
            "/",
          ],
        ],
      },
    },
    "RestApiEndpoint": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ProductApi63AD160A",
            },
            ".execute-api.eu-central-1.amazonaws.com/prod/getProductById",
          ],
        ],
      },
    },
    "TableArn": {
      "Description": "ARN of the DynamoDB Product Table",
      "Value": {
        "Fn::GetAtt": [
          "ProductTableB8D4E9ED",
          "Arn",
        ],
      },
    },
  },
  "Resources": {
    "ItemCountAlarmCDF8D75C": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "ThresholdReachedTopic0F63CDA8",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "TableName",
            "Value": {
              "Ref": "ProductTableB8D4E9ED",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "Table.ItemCount",
        "Namespace": "AWS/DynamoDB",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 2,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ProductApi63AD160A": {
      "Properties": {
        "Name": "ProductApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ProductApiAccountEEE6647B": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ProductApi63AD160A",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ProductApiCloudWatchRole4304298C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ProductApiCloudWatchRole4304298C": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "ProductApiDeploymentAB5FBC63113c765fef22cc70e5162bfddb2e5d2c": {
      "DependsOn": [
        "ProductApigetProductByIdPOSTD6703D66",
        "ProductApigetProductById1947B6DF",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "ProductApi63AD160A",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "ProductApiDeploymentStageprod9B123BA2": {
      "DependsOn": [
        "ProductApiAccountEEE6647B",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "ProductApiDeploymentAB5FBC63113c765fef22cc70e5162bfddb2e5d2c",
        },
        "RestApiId": {
          "Ref": "ProductApi63AD160A",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "ProductApigetProductById1947B6DF": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ProductApi63AD160A",
            "RootResourceId",
          ],
        },
        "PathPart": "getProductById",
        "RestApiId": {
          "Ref": "ProductApi63AD160A",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ProductApigetProductByIdPOSTApiPermissionMyTestStackProductApiA13352A5POSTgetProductByIdC37DF802": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getProductFunction18486D68",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ProductApi63AD160A",
              },
              "/",
              {
                "Ref": "ProductApiDeploymentStageprod9B123BA2",
              },
              "/POST/getProductById",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ProductApigetProductByIdPOSTApiPermissionTestMyTestStackProductApiA13352A5POSTgetProductById259E4F48": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getProductFunction18486D68",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ProductApi63AD160A",
              },
              "/test-invoke-stage/POST/getProductById",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ProductApigetProductByIdPOSTD6703D66": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getProductFunction18486D68",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "ProductApigetProductById1947B6DF",
        },
        "RestApiId": {
          "Ref": "ProductApi63AD160A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ProductTableB8D4E9ED": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "productId",
            "AttributeType": "S",
          },
          {
            "AttributeName": "tag",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "TagIndex",
            "KeySchema": [
              {
                "AttributeName": "tag",
                "KeyType": "HASH",
              },
            ],
            "Projection": {
              "ProjectionType": "ALL",
            },
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "productId",
            "KeyType": "HASH",
          },
        ],
        "TableName": "ProductTable",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "ScheduleRuleAllowEventRuleMyTestStackinsertFunction71337EFADDCD0C0B": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "insertFunction01563E29",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ScheduleRuleDA5BD877",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ScheduleRuleDA5BD877": {
      "Properties": {
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "insertFunction01563E29",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ThresholdReachedTopic0F63CDA8": {
      "Properties": {
        "DisplayName": "ThresholdReachedTopic",
      },
      "Type": "AWS::SNS::Topic",
    },
    "ThresholdReachedTopichristozhelevyahoocom274E2335": {
      "Properties": {
        "Endpoint": "hristo.zhelev@yahoo.com",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "ThresholdReachedTopic0F63CDA8",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "deleteFunctionAllowInvokeMyTestStackThresholdReachedTopic1D10ADD149D01819": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteFunctionB035173A",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "ThresholdReachedTopic0F63CDA8",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "deleteFunctionAllowSNSInvokeA9F6CB80": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteFunctionB035173A",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "ThresholdReachedTopic0F63CDA8",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "deleteFunctionB035173A": {
      "DependsOn": [
        "deleteFunctionServiceRoleDefaultPolicyC5645F1E",
        "deleteFunctionServiceRole528694C3",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "0aad8395d68e2bff4a38ff316ebaf34758b09f89eea4f88fae27aae3147216dc.zip",
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "ProductTableB8D4E9ED",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "deleteFunctionServiceRole528694C3",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "deleteFunctionServiceRole528694C3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "deleteFunctionServiceRoleDefaultPolicyC5645F1E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ProductTableB8D4E9ED",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ProductTableB8D4E9ED",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "deleteFunctionServiceRoleDefaultPolicyC5645F1E",
        "Roles": [
          {
            "Ref": "deleteFunctionServiceRole528694C3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "deleteFunctionThresholdReachedTopicFD7A5EEF": {
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "deleteFunctionB035173A",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "ThresholdReachedTopic0F63CDA8",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "getProductFunction18486D68": {
      "DependsOn": [
        "getProductFunctionServiceRoleDefaultPolicy6C111D49",
        "getProductFunctionServiceRoleAE436F24",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "b8602e9457b44a5a62700fecebe259be3f8464e6f173171b28d33371c3f3ebb4.zip",
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "ProductTableB8D4E9ED",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "getProductFunctionServiceRoleAE436F24",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "getProductFunctionServiceRoleAE436F24": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "getProductFunctionServiceRoleDefaultPolicy6C111D49": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ProductTableB8D4E9ED",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ProductTableB8D4E9ED",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "getProductFunctionServiceRoleDefaultPolicy6C111D49",
        "Roles": [
          {
            "Ref": "getProductFunctionServiceRoleAE436F24",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "insertFunction01563E29": {
      "DependsOn": [
        "insertFunctionServiceRoleDefaultPolicy7306E416",
        "insertFunctionServiceRole2295A836",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "94133b945837e43fb327c36d90c6c5b4fd6c984773ee9f5daaa7473714e094d4.zip",
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "ProductTableB8D4E9ED",
            },
            "TOPIC_ARN": {
              "Ref": "ThresholdReachedTopic0F63CDA8",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "insertFunctionServiceRole2295A836",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "insertFunctionServiceRole2295A836": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "insertFunctionServiceRoleDefaultPolicy7306E416": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ProductTableB8D4E9ED",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ProductTableB8D4E9ED",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "ThresholdReachedTopic0F63CDA8",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "insertFunctionServiceRoleDefaultPolicy7306E416",
        "Roles": [
          {
            "Ref": "insertFunctionServiceRole2295A836",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
